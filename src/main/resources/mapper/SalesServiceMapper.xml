<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="SalesServiceMapper">

    <!-- 전체 서비스 판매 내역 조회 -->
    <select id="selectAllSalesServices" resultType="SalesService">
        SELECT * FROM SALESSERVICE
        WHERE status != 'DELETED'
        ORDER BY createdAt DESC
    </select>

    <!-- 단일 서비스 판매 내역 조회 -->
    <select id="selectSalesServiceById" parameterType="long" resultType="SalesService">
        SELECT * FROM SALESSERVICE WHERE serviceSalesId = #{serviceSalesId}
    </select>

    <!-- 서비스 판매 등록 (purchase_seq 시퀀스로 PK 자동 생성) -->
    <insert id="insertSalesService" parameterType="SalesService">
        <selectKey keyProperty="serviceSalesId" resultType="long" order="BEFORE">
            SELECT sales_service_seq.NEXTVAL FROM DUAL
        </selectKey>

        INSERT INTO SALESSERVICE (
            serviceSalesId, serviceId, serviceName, empNum, memNum,
            baseCount, actualCount, discount, baseAmount, actualAmount, avgPrice,
            serviceType, status, createdAt, updatedAt
        ) VALUES (
            #{serviceSalesId}, #{serviceId}, #{serviceName}, #{empNum}, #{memNum},
            #{baseCount}, #{actualCount}, #{discount}, #{baseAmount}, #{actualAmount}, #{avgPrice},
            #{serviceType}, #{status}, #{createdAt}, #{updatedAt}
        )
    </insert>

    <!-- 서비스 판매 수정 -->
    <update id="updateSalesService" parameterType="SalesService">
        UPDATE SALESSERVICE
        SET serviceName = #{serviceName}, actualAmount = #{actualAmount}, updatedAt = #{updatedAt}
        WHERE serviceSalesId = #{serviceSalesId}
    </update>

    <!-- 서비스 판매 삭제 -->
    <update id="deleteSalesService" parameterType="long">
        UPDATE SALESSERVICE SET status = 'DELETED' WHERE serviceSalesId = #{serviceSalesId}
    </update>

    <!-- 서비스 판매 내역 조회 (페이지당 20개, 스크롤 10+10 로딩) -->
    <select id="selectPagedServiceSales" parameterType="map" resultType="SalesService">
        SELECT 
            s.serviceSalesId, s.createdAt, s.serviceType, s.serviceName,
            s.memNum, s.empNum, s.actualCount, s.actualAmount
        FROM SALESSERVICE s
        WHERE s.status != 'DELETED'
        <if test="keyword != null and keyword != ''">
            AND LOWER(s.serviceName) LIKE CONCAT('%', LOWER(#{keyword}), '%')
        </if>
        <if test="empNum != null">
            AND s.empNum = #{empNum}
        </if>
        <if test="memNum != null">
            AND s.memNum = #{memNum}
        </if>
        <if test="serviceIds != null and serviceIds.size > 0">
            AND s.serviceId IN
            <foreach item="id" collection="serviceIds" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        <if test="startDate != null and endDate != null">
            AND DATE(s.createdAt) BETWEEN #{startDate} AND #{endDate}
        </if>
        ORDER BY s.createdAt DESC
        OFFSET #{offset} ROWS FETCH NEXT #{limit} ROWS ONLY
    </select>

    <!-- 전체 행 개수 조회 -->
    <select id="countPagedServiceSales" parameterType="map" resultType="int">
        SELECT COUNT(*) 
        FROM SALESSERVICE s
        WHERE s.status != 'DELETED'
        <if test="keyword != null and keyword != ''">
            AND LOWER(s.serviceName) LIKE CONCAT('%', LOWER(#{keyword}), '%')
        </if>
        <if test="empNum != null">
            AND s.empNum = #{empNum}
        </if>
        <if test="memNum != null">
            AND s.memNum = #{memNum}
        </if>
        <if test="serviceIds != null and serviceIds.size > 0">
            AND s.serviceId IN
            <foreach item="id" collection="serviceIds" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        <if test="startDate != null and endDate != null">
            AND DATE(s.createdAt) BETWEEN #{startDate} AND #{endDate}
        </if>
    </select>

    <!-- 서비스 매출 그래프 조회 -->
    <select id="selectServiceSalesGraph" parameterType="map" resultType="map">
        SELECT
            CASE 
                WHEN #{serviceIds} IS NOT NULL THEN s.serviceName
                ELSE s.serviceType
            END AS label,
            SUM(s.actualAmount) AS totalSalesAmount
        FROM SALESSERVICE s
        WHERE s.status != 'DELETED'
        <if test="empNum != null">
            AND s.empNum = #{empNum}
        </if>
        <if test="memNum != null">
            AND s.memNum = #{memNum}
        </if>
        <if test="serviceIds != null and serviceIds.size > 0">
            AND s.serviceId IN
            <foreach item="id" collection="serviceIds" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        <if test="startDate != null and endDate != null">
            AND DATE(s.createdAt) BETWEEN #{startDate} AND #{endDate}
        </if>
        GROUP BY label
        ORDER BY totalSalesAmount DESC
    </select>

</mapper>
