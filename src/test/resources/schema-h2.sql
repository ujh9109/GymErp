-- H2 Oracle 모드 기반 (MODE=Oracle)
-- 모든 VARCHAR2 → VARCHAR 로 변경, SYSDATE/SYSTIMESTAMP 유지

--------------------------------------------------------
-- 1. 직원 (EMPLOYEE)
--------------------------------------------------------
CREATE TABLE EMPLOYEE (
    EMPNUM NUMBER PRIMARY KEY,
    EMPNAME VARCHAR(20) NOT NULL,
    GENDER VARCHAR(20) NOT NULL,
    EMPADDRESS VARCHAR(50),
    EMPBIRTH DATE NOT NULL,
    EMPPHONE VARCHAR(20) NOT NULL,
    EMPEMAIL VARCHAR(30) NOT NULL UNIQUE,
    HIREDATE DATE NOT NULL,
    FIREDATE DATE,
    PROFILEIMAGE VARCHAR(255),
    EMPMEMO VARCHAR(300),
    ROLE VARCHAR(20) DEFAULT 'EMP' NOT NULL
);
CREATE SEQUENCE EMPLOYEE_SEQ;

--------------------------------------------------------
-- 2. 회원 (MEMBER)
--------------------------------------------------------
CREATE TABLE MEMBER (
    MEMNUM NUMBER PRIMARY KEY,
    MEMNAME VARCHAR(50) NOT NULL,
    MEMGENDER VARCHAR(10) NOT NULL,
    MEMBIRTHDAY DATE,
    MEMPHONE VARCHAR(20) NOT NULL UNIQUE,
    MEMEMAIL VARCHAR(100) NOT NULL UNIQUE,
    MEMADDR VARCHAR(200),
    MEMCREATED DATE DEFAULT SYSDATE,
    MEMUPDATED DATE DEFAULT SYSDATE,
    MEMPROFILE VARCHAR(500),
    MEMNOTE VARCHAR(500)
);
CREATE SEQUENCE MEMBER_SEQ;

--------------------------------------------------------
-- 3. 회원권 (VOUCHER_LOG)
--------------------------------------------------------
CREATE TABLE VOUCHER_LOG (
    VOUCHERID NUMBER PRIMARY KEY,
    MEMNUM NUMBER NOT NULL,
    MEMBERNAME VARCHAR(100) NOT NULL,
    STARTDATE DATE NOT NULL,
    ENDDATE DATE NOT NULL,
    CONSTRAINT FK_VOUCHER_MEMBER FOREIGN KEY (MEMNUM) REFERENCES MEMBER(MEMNUM)
);
CREATE SEQUENCE VOUCHER_LOG_SEQ;

--------------------------------------------------------
-- 4. PT 이용 내역 (PT_LOG)
--------------------------------------------------------
CREATE TABLE PT_LOG (
    USAGEID NUMBER PRIMARY KEY,
    MEMNUM NUMBER NOT NULL,
    EMPNUM NUMBER NOT NULL,
    TRAINERNAME VARCHAR(100) NOT NULL,
    MEMBERNAME VARCHAR(100) NOT NULL,
    STATUS VARCHAR(20) NOT NULL,
    COUNTCHANGE NUMBER,
    TOTALAMOUNT NUMBER,
    CONSUMEAMOUNT NUMBER,
    CREATEDAT DATE DEFAULT SYSDATE,
    CONSTRAINT FK_PTLOG_MEMBER FOREIGN KEY (MEMNUM) REFERENCES MEMBER(MEMNUM),
    CONSTRAINT FK_PTLOG_EMPLOYEE FOREIGN KEY (EMPNUM) REFERENCES EMPLOYEE(EMPNUM)
);
CREATE SEQUENCE PT_LOG_SEQ;

--------------------------------------------------------
-- 5. 스케줄 (SCHEDULE)
--------------------------------------------------------
CREATE TABLE SCHEDULE (
    SHNUM NUMBER PRIMARY KEY,
    EMPNUM NUMBER NOT NULL,
    STARTTIME TIMESTAMP DEFAULT SYSTIMESTAMP,
    ENDTIME TIMESTAMP DEFAULT SYSTIMESTAMP,
    MEMO VARCHAR(200),
    COLOR VARCHAR(10),
    REFTYPE VARCHAR(20) NOT NULL,
    REFID NUMBER NOT NULL,
    CONSTRAINT FK_SCHEDULE_EMP FOREIGN KEY (EMPNUM) REFERENCES EMPLOYEE(EMPNUM)
);
CREATE SEQUENCE SCHEDULE_SEQ;

--------------------------------------------------------
-- 6. 근태관리 (ATTENDANCE)
--------------------------------------------------------
CREATE TABLE ATTENDANCE (
    ATTNUM NUMBER PRIMARY KEY,
    EMPNUM NUMBER NOT NULL,
    ATTDATE DATE,
    CHECKIN TIMESTAMP DEFAULT SYSTIMESTAMP,
    CHECKOUT TIMESTAMP DEFAULT SYSTIMESTAMP,
    WORKHOURS NUMBER,
    ATTSTATE VARCHAR(20) NOT NULL,
    CONSTRAINT FK_ATT_EMP FOREIGN KEY (EMPNUM) REFERENCES EMPLOYEE(EMPNUM)
);
CREATE SEQUENCE ATTNUM_SEQ;

--------------------------------------------------------
-- 7. 휴가 (VACATION)
--------------------------------------------------------
CREATE TABLE VACATION (
    VACNUM NUMBER PRIMARY KEY,
    EMPNUM NUMBER NOT NULL,
    VACSTARTEDAT DATE NOT NULL,
    VACENDEDAT DATE NOT NULL,
    VACCONTENT VARCHAR(250),
    VACSTATE VARCHAR(30),
    EARNEDDAYS NUMBER,
    REMAININGDAYS NUMBER,
    USEDDAYS NUMBER,
    CONSTRAINT FK_VAC_EMP FOREIGN KEY (EMPNUM) REFERENCES EMPLOYEE(EMPNUM)
);
CREATE SEQUENCE VACATION_SEQ;

--------------------------------------------------------
-- 8. 기타 일정 (ETC)
--------------------------------------------------------
CREATE TABLE ETC (
    ETCNUM NUMBER PRIMARY KEY,
    EMPNUM NUMBER NOT NULL,
    ETCCREATED TIMESTAMP DEFAULT SYSTIMESTAMP,
    STARTTIME DATE NOT NULL,
    ENDTIME DATE NOT NULL,
    ETCUPDATEDAT TIMESTAMP DEFAULT SYSTIMESTAMP,
    ETCMEMO VARCHAR(500),
    ETCTYPE VARCHAR(50) NOT NULL,
    CONSTRAINT FK_ETC_EMP FOREIGN KEY (EMPNUM) REFERENCES EMPLOYEE(EMPNUM)
);
CREATE SEQUENCE ETC_SCHEDULE_SEQ;

--------------------------------------------------------
-- 9. 개인 스케줄 (EMP_SCHEDULE)
--------------------------------------------------------
CREATE TABLE EMPSCHEDULE (
    CALNUM NUMBER PRIMARY KEY,
    SHNUM NUMBER NOT NULL,
    EMPNUM NUMBER NOT NULL,
    STARTTIME TIMESTAMP NOT NULL,
    ENDTIME TIMESTAMP NOT NULL,
    MEMO VARCHAR(500),
    COLOR VARCHAR(10),
    REFTYPE VARCHAR(20) NOT NULL,
    REFID NUMBER NOT NULL,
    CONSTRAINT FK_EMPSCH_SCHEDULE FOREIGN KEY (SHNUM) REFERENCES SCHEDULE(SHNUM),
    CONSTRAINT FK_EMPSCH_EMPLOYEE FOREIGN KEY (EMPNUM) REFERENCES EMPLOYEE(EMPNUM)
);
CREATE SEQUENCE CALNUM_SEQ;

--------------------------------------------------------
-- 10. PT 등록 (REGISTRATION)
--------------------------------------------------------
CREATE TABLE REGISTRATION (
    REGNUM NUMBER PRIMARY KEY,
    EMPNUM NUMBER NOT NULL,
    MEMNUM NUMBER NOT NULL,
    SHNUM NUMBER NOT NULL,
    REGCREATED TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    REGTIME DATE NOT NULL,
    LASTTIME DATE NOT NULL,
    REGDATE DATE NOT NULL,
    REGUPDATEDAT TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    REGNOTE VARCHAR(500),
    CONSTRAINT FK_REG_EMP FOREIGN KEY (EMPNUM) REFERENCES EMPLOYEE(EMPNUM),
    CONSTRAINT FK_REG_MEM FOREIGN KEY (MEMNUM) REFERENCES MEMBER(MEMNUM),
    CONSTRAINT FK_REG_SCHEDULE FOREIGN KEY (SHNUM) REFERENCES SCHEDULE(SHNUM)
);
CREATE SEQUENCE REGNUM_SEQ;

--------------------------------------------------------
-- 11. 코드A (CODEA)
--------------------------------------------------------
CREATE TABLE CODEA (
    CODEAID VARCHAR(50) PRIMARY KEY,
    NAME VARCHAR(50) NOT NULL
);

--------------------------------------------------------
-- 12. 코드B (CODEB)
--------------------------------------------------------
CREATE TABLE CODEB (
    CODEBID VARCHAR(50) PRIMARY KEY,
    CODEAID VARCHAR(50) NOT NULL,
    NAME VARCHAR(50) NOT NULL,
    CONSTRAINT FK_CODEB_CODEA FOREIGN KEY (CODEAID) REFERENCES CODEA(CODEAID)
);

--------------------------------------------------------
-- 13. 서비스 상품 (SERVICE)
--------------------------------------------------------
CREATE TABLE SERVICE (
    SERVICEID NUMBER PRIMARY KEY,
    EMPNUM NUMBER,
    CODEBID VARCHAR(50) NOT NULL,
    NAME VARCHAR(250) NOT NULL,
    PRICE NUMBER NOT NULL,
    ISACTIVE NUMBER(1) DEFAULT 1 NOT NULL,
    CREATEDAT DATE DEFAULT SYSDATE NOT NULL,
    UPDATEDAT DATE,
    SERVICEVALUE NUMBER NOT NULL,
    CONSTRAINT FK_SERVICE_EMP FOREIGN KEY (EMPNUM) REFERENCES EMPLOYEE(EMPNUM),
    CONSTRAINT FK_SERVICE_CODEB FOREIGN KEY (CODEBID) REFERENCES CODEB(CODEBID)
);
CREATE SEQUENCE SERVICE_SEQ;

--------------------------------------------------------
-- 14. 실물 상품 (PRODUCT)
--------------------------------------------------------
CREATE TABLE PRODUCT (
    PRODUCTID NUMBER PRIMARY KEY,
    CODEBID VARCHAR(50) NOT NULL,
    NAME VARCHAR(250) NOT NULL,
    PRICE NUMBER NOT NULL,
    ISACTIVE NUMBER(1) DEFAULT 1 NOT NULL,
    CREATEDAT DATE DEFAULT SYSDATE NOT NULL,
    UPDATEDAT DATE,
    CONSTRAINT FK_PRODUCT_CODEB FOREIGN KEY (CODEBID) REFERENCES CODEB(CODEBID)
);
CREATE SEQUENCE PRODUCT_SEQ;

--------------------------------------------------------
-- 15. 재고 조정 (STOCK_ADJUSTMENT)
--------------------------------------------------------
CREATE TABLE STOCKADJUSTMENT (
    ADJUSTMENTID NUMBER PRIMARY KEY,
    PRODUCTID NUMBER NOT NULL,
    CODEBID VARCHAR(50) NOT NULL,
    CREATEDAT DATE DEFAULT SYSDATE NOT NULL,
    QUANTITY NUMBER NOT NULL,
    NOTES VARCHAR(100) NOT NULL,
    CONSTRAINT FK_ADJUSTMENT_PRODUCT FOREIGN KEY (PRODUCTID) REFERENCES PRODUCT(PRODUCTID),
    CONSTRAINT FK_ADJUSTMENT_CODEB FOREIGN KEY (CODEBID) REFERENCES CODEB(CODEBID)
);
CREATE SEQUENCE STOCK_ADJUSTMENT_SEQ;

--------------------------------------------------------
-- 16. 입고 내역 (PURCHASE)
--------------------------------------------------------
CREATE TABLE PURCHASE (
    PURCHASEID NUMBER PRIMARY KEY,
    PRODUCTID NUMBER NOT NULL,
    CODEBID VARCHAR(50) NOT NULL,
    CREATEDAT DATE DEFAULT SYSDATE NOT NULL,
    QUANTITY NUMBER NOT NULL,
    NOTES VARCHAR(100) NOT NULL,
    CONSTRAINT FK_PURCHASE_PRODUCT FOREIGN KEY (PRODUCTID) REFERENCES PRODUCT(PRODUCTID),
    CONSTRAINT FK_PURCHASE_CODEB FOREIGN KEY (CODEBID) REFERENCES CODEB(CODEBID)
);
CREATE SEQUENCE PURCHASE_SEQ;

--------------------------------------------------------
-- 17. 상품 판매 (SALES_ITEM)
--------------------------------------------------------
CREATE TABLE SALES_ITEM (
    ITEMSALESID NUMBER PRIMARY KEY,
    PRODUCTID NUMBER NOT NULL,
    EMPNUM NUMBER NOT NULL,
    PRODUCTNAME VARCHAR(100) NOT NULL,
    QUANTITY NUMBER NOT NULL,
    UNITPRICE NUMBER(12,2) NOT NULL,
    TOTALAMOUNT NUMBER(12,2) NOT NULL,
    PRODUCTTYPE VARCHAR(20) NOT NULL,
    STATUS VARCHAR(20) DEFAULT 'ACTIVE' NOT NULL,
    CREATEDAT DATE DEFAULT SYSDATE NOT NULL,
    UPDATEDAT DATE,
    CONSTRAINT FK_SALESITEM_PRODUCT FOREIGN KEY (PRODUCTID) REFERENCES PRODUCT(PRODUCTID),
    CONSTRAINT FK_SALESITEM_EMP FOREIGN KEY (EMPNUM) REFERENCES EMPLOYEE(EMPNUM)
);
CREATE SEQUENCE SALES_ITEM_SEQ;

--------------------------------------------------------
-- 18. 서비스 판매 (SALES_SERVICE)
--------------------------------------------------------
CREATE TABLE SALES_SERVICE (
    SERVICESALESID NUMBER PRIMARY KEY,
    EMPNUM NUMBER NOT NULL,
    MEMNUM NUMBER NOT NULL,
    SERVICEID NUMBER NOT NULL,
    PRODUCTNAME VARCHAR(1000) NOT NULL,
    BASECOUNT NUMBER NOT NULL,
    ACTUALCOUNT NUMBER NOT NULL,
    DISCOUNT NUMBER DEFAULT 0 NOT NULL,
    BASEAMOUNT NUMBER(12,2) NOT NULL,
    ACTUALAMOUNT NUMBER(12,2) NOT NULL,
    AVGPRICE NUMBER(12,2) NOT NULL,
    PRODUCTTYPE VARCHAR(20) NOT NULL,
    STATUS VARCHAR(20) DEFAULT 'ACTIVE' NOT NULL,
    CREATEDAT DATE DEFAULT SYSDATE NOT NULL,
    UPDATEDAT DATE,
    CONSTRAINT FK_SALESSVC_EMP FOREIGN KEY (EMPNUM) REFERENCES EMPLOYEE(EMPNUM),
    CONSTRAINT FK_SALESSVC_MEM FOREIGN KEY (MEMNUM) REFERENCES MEMBER(MEMNUM),
    CONSTRAINT FK_SALESSVC_SVC FOREIGN KEY (SERVICEID) REFERENCES SERVICE(SERVICEID)
);
CREATE SEQUENCE SALES_SERVICE_SEQ;
